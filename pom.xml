<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.19.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.pkpm</groupId>
	<artifactId>pkpm-flume-sdk</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>pkpm-flume-sdk</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<!-- Set default encoding to UTF-8 to remove maven complaints -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Java compiler configuration -->
		<sourceJavaVersion>1.8</sourceJavaVersion>
		<targetJavaVersion>1.8</targetJavaVersion>

		<!-- defaults for flaky test and focused test exclusions -->
		<test.exclude.pattern>$</test.exclude.pattern> <!-- junk pattern -->
		<test.include.pattern>**/Test*.java</test.include.pattern>
		<siteUrlDeployment>file://people.apache.org/www/incubator.apache.org/flume</siteUrlDeployment>
		<stagingDirectory>${project.basedir}/target/docs</stagingDirectory>

		<activemq.version>5.7.0</activemq.version>
		<asynchbase.version>1.7.0</asynchbase.version>
		<avro.version>1.7.4</avro.version>
		<bundle-plugin.version>2.3.7</bundle-plugin.version>
		<checkstyle.plugin.version>2.17</checkstyle.plugin.version>
		<checkstyle.tool.version>6.19</checkstyle.tool.version>
		<codehaus.jackson.version>1.9.3</codehaus.jackson.version>
		<commons-cli.version>1.2</commons-cli.version>
		<commons-codec.version>1.8</commons-codec.version>
		<commons-collections.version>3.2.2</commons-collections.version>
		<commons-compress.version>1.4.1</commons-compress.version>
		<commons-dbcp.version>1.4</commons-dbcp.version>
		<commons-io.version>2.1</commons-io.version>
		<commons-lang.version>2.5</commons-lang.version>
		<curator.version>2.6.0</curator.version>
		<derby.version>10.11.1.1</derby.version>
		<elasticsearch.version>0.90.1</elasticsearch.version>
		<fasterxml.jackson.version>2.8.9</fasterxml.jackson.version>
		<fest-reflect.version>1.4</fest-reflect.version>
		<geronimo-jms.version>1.1.1</geronimo-jms.version>
		<gson.version>2.2.2</gson.version>
		<guava.version>18.0</guava.version>
		<guava-old.version>11.0.2</guava-old.version>
		<hadoop2.version>2.4.0</hadoop2.version>
		<httpclient.version>4.3.5</httpclient.version>
		<httpclient-old.version>4.2.1</httpclient-old.version>
		<irclib.version>1.10</irclib.version>
		<jersey.version>1.8</jersey.version>
		<jetty.version>9.4.14.v20181114</jetty.version>
		<joda-time.version>2.9.9</joda-time.version>
		<junit.version>4.12</junit.version>
		<kafka.version>0.9.0.1</kafka.version>
		<kite.version>1.0.0</kite.version>
		<hive.version>1.0.0</hive.version>
		<slf4j.version>1.6.1</slf4j.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

       <!--flume相关-->
		<dependency>
			<groupId>org.apache.flume</groupId>
			<artifactId>flume-ng-sdk</artifactId>
			<version>1.9.0</version>
		</dependency>

		<!--flume-ng-core-->
		<dependency>
			<groupId>org.apache.flume</groupId>
			<artifactId>flume-ng-core</artifactId>
			<version>1.9.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.flume</groupId>
			<artifactId>flume-ng-sinks</artifactId>
			<version>1.9.0</version>
			<type>pom</type>
		</dependency>
		<!--taildirSource 支持 windows系统-->
		<dependency>
			<groupId>net.java.dev.jna</groupId>
			<artifactId>jna</artifactId>
			<version>4.2.2</version>
		</dependency>
		<dependency>
			<groupId>net.java.dev.jna</groupId>
			<artifactId>jna-platform</artifactId>
			<version>4.2.2</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-nop</artifactId>
			<version>1.7.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.flume</groupId>
			<artifactId>flume-ng-node</artifactId>
			<version>1.9.0</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>21.0</version>
		</dependency>

		<!--swagger-->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.7.0</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.7.0</version>
		</dependency>
		<!--json-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.1.15</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>

			</plugin>
			<!-- 用于生成jar包的plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<!-- 把生成的jar包放在lib目录下（和其他所有jar包一起） -->
					<outputDirectory>${project.build.directory}/lib</outputDirectory>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
					</archive>
					<excludes>
						<!-- 排除掉一些文件,不要放到jar包中，
                        这里是为了排除掉src/main/resources中的文件（它们应该放到conf目录）
                        这里只能指定要排除的目标文件，而不能指定源文件，虽然不够完美，但是基本能达到目的。 -->
						<exclude>*.xml</exclude>
						<exclude>*.properties</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- 用于拷贝maven依赖的plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<!-- 把依赖的所有maven jar包拷贝到lib目录中（这样所有的jar包都在lib目录中） -->
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- 用于拷贝resource的plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- 配置生成源代码jar的plugin -->
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<attach>true</attach>
					<!-- 配置源代码jar文件的存放路径，和其他jar文件一起放在lib目录 -->
					<outputDirectory>${project.build.directory}/lib</outputDirectory>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.5.5</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>com.pkpm.Application</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
