# 可选值default、thrift、default_failover、default_loadbalance
# 其中default使用avro协议
# 如果使用default_failover和default_loadbalance，那么也只能用avro协议
client.type = default

# 如果client.type值为default或者thrift，那么hosts只有一台主机
# 如果client.type值为default_failover或者default_loadbalance，那么hosts至少要配置两台主机。
hosts = h1
# hosts = h1,h2,h3

# 主机配置
hosts.h1 = 114.115.170.6:52020
# hosts.h2 = host2.example.org:41414
# hosts.h3 = host3.example.org:41414

# 如果主机连接失败，是否把主机临时放入黑名单中，过一段时间再启用。
# 默认为false，不放入黑名单。
backoff = false

# 主机连接失败，下次连接该主机的最大时间间隔，单位毫秒。
# 默认值为0，相当于30000毫秒。
maxBackoff = 0

# 如果client.type使用default_loadbalance，该模式下主机的轮询策略。
# 可选策略有round_robin、random或者自定义策略（实现LoadBalancingRpcClient$HostSelector接口）。
# 默认是round_robin
host-selector = round_robin

# 批量发送的数量，该值必须大于0，默认是100。
batch-size = 500

# 连接超时，该值必须大于1000，默认是20000，单位毫秒。
connect-timeout = 20000

# 请求超时，该值必须大于1000，默认是20000，单位毫秒。
request-timeout = 20000

# 消息编码，默认是utf-8
charset = utf-8

# 如果消息发送失败，尝试发送的消息次数，默认为3次
attemptTimes = 3

#flume读取指定目录的数据
#agent1 name
agent1.channels = c1
agent1.sources = r1 r2 r11 r21
agent1.sinks = k1 k2

#set channel
agent1.channels.c1.type = memory
#channel中存储 events 的最大数量
agent1.channels.c1.capacity = 1000
#事物容量，不能大于capacity，不能小于batchSize
agent1.channels.c1.transactionCapacity = 100

agent1.sources.r2.type = exec
#实时采集文件
agent1.sources.r2.command = tail -f F:\\data\\test\\f.log
agent1.sources.r2.channels = c1
#编码，flume默认为utf-8
agent1.sources.r2.inputCharset=utf-8

#实时采集文件
agent1.sources.r21.type = exec
agent1.sources.r21.command = tail -f F:\\data\\test11\\f21.log
agent1.sources.r21.channels = c1
#编码，flume默认为utf-8
agent1.sources.r21.inputCharset=utf-8


#spooldir类型
agent1.sources.r1.type = spooldir
#此路径下每产生新文件，flume就会自动采集
agent1.sources.r1.spoolDir = /data/logdfs
agent1.sources.r1.fileHeader = true
agent1.sources.r1.channels = c1

##spooldir类型
#agent1.sources.r11.type = spooldir
##此路径下每产生新文件，flume就会自动采集
#agent1.sources.r11.spoolDir = F:\\data\\logdfs11
#agent1.sources.r11.fileHeader = true
#agent1.sources.r11.channels = c1
#agent1.sources.r11.ignorePattern = ^(.)*\\.log$


# set sink1
agent1.sinks.k1.channel = c1
agent1.sinks.k1.type = avro
agent1.sinks.k1.hostname = s1
agent1.sinks.k1.port = 52020
# set sink2
agent1.sinks.k2.channel = c1
#协议类型
agent1.sinks.k2.type = avro
agent1.sinks.k2.hostname = s2
agent1.sinks.k2.port = 52020

#set gruop
agent1.sinkgroups = g1
#set sink group
agent1.sinkgroups.g1.sinks = k1 k2
#set failover
#故障转移，若node04故障，node05自动接替node04工作
agent1.sinkgroups.g1.processor.type = failover
#优先级10
agent1.sinkgroups.g1.processor.priority.k1 = 10
#优先级5
agent1.sinkgroups.g1.processor.priority.k2 = 5
#最长等待10秒转移故障
agent1.sinkgroups.g1.processor.maxpenalty = 10000